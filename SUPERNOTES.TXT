What is Docker?
=======================
	Container mgmt tool
			--- Improve Efficiency
			--- Reduces a Cost
			--- Save time.

Why Docker?


What is Container?
=============================
TECH - 
		USER SPACE with 
				OWN	
					NET
					PMAP
					MNT

Container is a Process FOR host machine
Each container get USER NS for ISOLATION.
Each container get NET NS for SCA | AVA | SEC
Each container get PMAP NS for Process ISOL
Each container get MNT NS for MOUNT ISOL

 29  history
   30  clear
   31  which docker
   32  ps -eaf | grep docker
   33  ps -eaf
   34  ps -eaf | grep docker
   35  ps -eaf
   36  clear
   37  ps -eaf | grep docker
   38  docker run -itd ubuntu
   39  clear
   40  docker ps
   41  ps -eaf | grep docker
   42  docker run -itd ubuntu
   43  docker ps
   44  ps -eaf | grep docker
   45  clear
   46  docker ps
   47  docker attach 0ca0a1611255
   48  docker ps
   49  docker attach 02f949b80f38
   50  clear
   51  ls
   52  clear
   53  ls
   54  docker ps
   55  docker inspect 0ca0a1611255 | grep -i ip
   56  docker inspect 02f949b80f38 | grep -i ip
   57  ifconfig
   58  clear
   59  ps -eaf
   60  clear
   61  docker ps
   62  docker exec 0ca0a1611255 df -kh
   63  docker exec 0ca0a1611255 ps -eaf
   64  docker exec 02f949b80f38 ps -eaf
   65  clear
   66  docker run -d jenkins
   67  clear
   68  docker run -d jenkins
   69  docker ps -a
   70  docker exec 59cbd87add00 ps -eaf
   71  docker exec 2ddc31386c26 ps -eaf
   72  clear
   73  docker ps
   74  docker exec 0ca0a1611255 df -kh
   75  docker exec 02f949b80f38 df -kh
   76  docker exec 02f949b80f38 ls /
   77  docker exec 0ca0a1611255 ls /
   78  docker exec 0ca0a1611255 touch /opt/rajesh.txt
   79  docker exec 0ca0a1611255 ls /opt/rajesh.txt
   80  docker exec 02f949b80f38 ls /opt/
   81  history


Business 
Lightweight App run time env which is isolvated powered by NS with a help of docker.		


CPU and RAM Mgmt - 	

What are the NS which emp - RUN TiME APP --
				USER
				NET
				PMAP
				MNT
CPU and RAM Mgmt - 	
			CGROUP
Capabalites

=========================================================
Other tool ->
	https://www.devopsschool.com/blog/list-of-top-container-runtime-interface-

projects/

Artiectutre of Docker?
==============================
HUMEN -> DOCKER CLIENT ---(REST API)----> DOCKER DEAMON-----CONTAINERD--> KERNAL (NS)

Component of Docker?
==============================
Docker Engine
	 DOCKER CLIENT ---(REST API)----> DOCKER DEAMON
Docker Registry 
		--> Repositorie(S)
		- Repository 1 - ONE IMAGE
		- Repository 2 - ONE IMAGE
		- Repository 3 - ONE IMAGE

	PUB
		hub.docker.com
		GR
		ECR
	PVT	
		Nexus
		Artifactory
		registry
	
Docker Image
	Complete package of APP RUN TIME env*****
	From one image --- yOu can get multiple container
	Each Container share the same image.
Docker Container
	

=============
Demo time
RHEL-7.5_HVM_GA-20180322-x86_64-1-Hourly2-GP2 (ami-5b673c34)
13.234.240.167
ec2-user
Key - rajesh-mumbai.ppk

STATEMENT
====================
DOCKER NEEDS ROOT OR ANY USER WHO IS PART OF GROUP CALLED "DOCKER"
===============
How to install Docker?
https://www.devopsschool.com/tutorial/docker/install-config/
https://www.devopsschool.com/tutorial/docker/install-config/docker-install-

commuityedition-centos-rhel.html

 22  sudo yum install -y docker-ce
   23  docker -v
   24  sudo systemctl enable docker
   25  sudo systemctl start docker
   26  docker info
   27  clear
   28  ls
   29  history

=========================================
Container WORKFLOW with Docker.
=====================================================
Create -> Start -> Stop -> Restart -> PAUSE -> UNPAUSE -> KILL -> Start -> stop -> 

remove

What APP YOu want to run?
--------------
Tomcat
Jenkins
mysql
apache
redis
maven
gradle
nginx
java
es
zoo
kibana
============IMAGE ==> Registry -> Repo
====================================
WORKFLOW OF DOCKER ?

1. CHECK IMAGE in LR 
		IF FOUND - APPLIED CONTAINER WORKFLOW
		IF NOT FOUND - CHECK HUB and DOWNLOAD FROM HUB to LR.


Container WORKFLOW with Docker.
=====================================================
Create -> Start -> Stop -> Restart -> PAUSE -> UNPAUSE ->KILL->Start ->stop-> remove

RUN ==
PULL + CREATE + START + BECOME


PAUSE VS UNPAUSE
https://www.devopsschool.com/blog/docker-pause-and-unpause-explanined/

 82  clear
   83  docker images
   84  docker pull jenkins
   85  clear
   86  ls
   87  clear
   88  cd
   89  ls
   90  docker images
   91  dcoker ps
   92  docker ps
   93  docker ps -a
   94  clear
   95  ls
   96  docker stop $(docker ps -a -q)
   97  docker rm $(docker ps -a -q)
   98  clear
   99  docker ps
  100  docker ps -a
  101  docker create jenkins
  102  docker ps
  103  docker ps -a
  104  docker start 504286a7dfd6
  105  docker ps -a
  106  docker stop 504286a7dfd6
  107  docker ps -a
  108  clear
  109  docker restart 504286a7dfd6
  110  docker ps -a
  111  docker pause 504286a7dfd6
  112  docker ps -a
  113  docker unpause 504286a7dfd6
  114  docker ps -a
  115  docker kill 504286a7dfd6
  116  docker ps -a
  117  docker start 504286a7dfd6
  118  docker ps -a
  119  clear
  120  docker stop 504286a7dfd6
  121  docker ps -a
  122  docker rm 504286a7dfd6
  123  docker ps -a
  124  history

http://bit.ly/374O0E9


ymohdriz
shriramv
kgayathri-dev
bharanis86
azarfaiz
subbarayulun
aathiraj10
rajshoponline
kgsag
sadhiq83
lavanya172
pradeepa2194
ShubhSingh


clepg
softsenthil



1 13.232.93.173
2 13.233.23.221
3 35.154.233.157
4 13.235.50.98
5 13.232.123.218
6 52.66.49.150
7 15.206.117.61
8 13.234.122.116
9 13.233.229.245
10 13.235.9.142
11 52.66.51.124
12 13.233.86.165
13 13.233.48.31
14 13.235.134.250
15 13.232.146.65

User name - ec2-user
Key - 
    PPK for Putty - rajesh-mumbai.ppk
    PEM for LINUX - rajesh-mumbai.pem

https://www.devopsschool.com/notes/docker/2019/
=================================================================
PID 1 is running so Your container is running.

docker run ubuntu
docker run jenkins
-----------------------
pull+create+start+become = RUN

How to use that containers?
=============================
How to get inside???

    exec way
            - it execute an executables but inside a container but  
            - with -it && shell - you can do inside a container.

    attach way
            - It attached to PID 1
            - TO DETAHC - you can use -d


  132  docker ps -a
  133  docker run ubuntu
  134  docker ps -a
  135  docker run jenkins
1  docker ps -a
    2  clear
    3  docker run ubuntu ls
    4  docker ps -a
    5  clear
    6  clear
    7  docker ps
    8  docker exec c63057ac066a ls
    9  docker exec c63057ac066a df
   10  docker exec c63057ac066a ps\
   11  docker exec c63057ac066a ps
   12  docker ps
   13  clear
   14  docker ps
   15  docker exec -it c63057ac066a /bin/bash
   16  clear
   17  docker ps
   18  clear
   19  docker ps
   20  docker attach c63057ac066a
   21  docker ps -a
   22  clear
   23  docker stop $(docker ps -a -q)
   24  docker rm $(docker ps -a -q)
   25  clear
   26  ls
   27  docker ps -a
   28  docker run ubuntu
   29  dockr ps
   30  docker ps -a
   31  docker run ubuntu ff
   32  docker ps -a
   33  clear
   34  docker run ubuntu ls
   35  docker ps -a
   36  clear
   37  docker run -it ubuntu /bin/bash
   38  docker ps
   39  docker run -itd ubuntu
   40  docker ps
   41  docker attach 9c4c85ed68f4
   42  docker ps
   43  history


How to access from outside?
53  docker stop $(docker ps -a -q)
   54  docker rm $(docker ps -a -q)
   55  clear
   56  docker help run
   57  clear
   58  docker run -d -p 8080:8080 jenkins
   59  docker ps
   60  docker run -d -p 8080:8080 jenkins
   61  docker ps -a
   62  docker run -d -p 8090:8080 jenkins
   63  clear
   64  docker ps

=========================================================================
LETS CONCLUDE TODAY
=================================================
https://www.devopsschool.com/tutorial/docker/commands/


cp
----------
84  docker cp devopsschool.txt 5e9f72c88b54:/opt
   85  docker run -d jenkins
   86  docker ps
   87  docker cp devopsschool.txt 404e3c50d161:/opt
   88  docker exec 404e3c50d161 touch /opt/fff
   89  docker exec 404e3c50d161 touch /tmp/fff
   90  clear
   91  docker ps
   92  docker exec -it 404e3c50d161 /bin/bash
   93  clear
   94  docker ls
   95  docker ps
   96  ks
   97  ls
   98  docker exec 5e9f72c88b54 ls /opt/
   99  rm -rf devopsschool.txt
  100  ls
  101  docker cp 5e9f72c88b54:/opt/devopsschool.txt .
  102  ls


diff
---------
103  history
  104  clear
  105  ls
  106  docker ps
  107  docker attach 5e9f72c88b54
  108  clear
  109  clear
  110  docker ps
  111  docker diff 5e9f72c88b54
  112  history

port

 117  docker ps
  118  docker port 404e3c50d161
  119  docker port 5e9f72c88b54
  120  docker run -d -p 8080:8080 jenkins
  121  docker ps
  122  docker port c8c549ac53cf
  123  history
[root@ip-172-31-29-54 ec2-user]#


rename

126  docker run -itd --name raju ubuntu
  127  docker ps
  128  docker rename c8c549ac53cf dev
  129  docker ps



ASSIGNMENT -
docker help
Google.com
update	Update configuration of one or more containers
wait	Block until one or more containers stop, then print their exit codes

31  clear
  132  docker ps
  133  docker logs c8c549ac53cf
  134  docker logs c8c549ac53cf
  135  docker exec c8c549ac53cf more /var/jenkins_home/secrets/initialAdminPassword
  136  docker logs c8c549ac53cf
 154  docker logs c8c549ac53cf
  155  docker logs c8c549ac53cf
  156  c;ear
  157  clear
  158  docker stats
  159  docker stats 3bda46964f13
  160  CLEAR
  161  clear
  162  docker ps
  163  ps -eaf | grep docker
  164  docker top
  165  clear
  166  docker ps
  167  docker top 3bda46964f13
  168  clear
  169  docker events
  170  history
